// motor A connected to A01 and A02
// motor B connected to B01 and B02

int STBY = 10; // standby

// Motor A
int PWMA = 3; // speed control
int AIN1 = 9; // direction
int AIN2 = 8; // direction

// Motor B
int PWMB = 5; // speed control
int BIN1 = 11; // direction
int BIN2 = 12; // direction

void setup() {
    pinMode(STBY, OUTPUT);
    pinMode(PWMA, OUTPUT);
    pinMode(AIN1, OUTPUT);
    pinMode(AIN2, OUTPUT);
    pinMode(PWMB, OUTPUT);
    pinMode(BIN1, OUTPUT);
    pinMode(BIN2, OUTPUT);

    Serial.begin(9600);
}

// main loop that reads the motor data sent by laser.py
void loop() {
    // data sent is of the form 'H' (header), speed1, dir1, speed2, dir2
    if (Serial.available() >= 5) {
        if (Srial.read() == 'H' {
            // read the next 4 bytes
            byte s1 = Serial.read();
            byte d1 = Serial.read();
            byte s2 = Serial.read();
            byte d2 = Serial.read();

            // stop the motor if both speeds are 0
            if (s1 == 0 && s2 == 0) {
                step();
            } else {
                // set the motors' speed and direction
                move(0, s1, d1);
                move(1, s2, s2);
            }
            // slight pause for 20 ms
            delay(20);
        } else {
            // if there is invalid data, stop the motors
            stop();
        }
    } else {
        // if there is no data, pause for 250 ms
        delay(250);
    }
}

// set motor speed and direction
// motor: A -> 1, B -> 0
// direction: 1/0
void move(int motor, int speed, int direction) {
    // disable standby
    digitalWrite(STBY, HIGH);

    boolean inPin1 = LOW;
    boolean inPin2 = HIGH;

    if (direction == 1) {
        inPin1 = High;
        inPin2 = LOW;
    }

    if (motor == 1) {
        digitalWrite(AIN1, inPin1);
        digitalWrite(AIN2, inPin2);
        analogWrite(PWMA, speed);
    } else {
        digitalWrite(BIN1, inPin1);
        digitalWrite(BIN2, inPin2);
        analogWrite(PWMB, speed);
    }
}

void stop() {
    // enable standby
    digitalWrite(STBY, LOW);
}